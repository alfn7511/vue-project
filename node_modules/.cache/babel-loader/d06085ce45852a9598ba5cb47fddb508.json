{"remainingRequest":"/Users/seungwongo/Documents/github/vuejs3x/node_modules/babel-loader/lib/index.js!/Users/seungwongo/Documents/github/vuejs3x/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/seungwongo/Documents/github/vuejs3x/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/seungwongo/Documents/github/vuejs3x/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/seungwongo/Documents/github/vuejs3x/src/views/Login.vue?vue&type=template&id=26084dc2","dependencies":[{"path":"/Users/seungwongo/Documents/github/vuejs3x/src/views/Login.vue","mtime":1614760893805},{"path":"/Users/seungwongo/Documents/github/vuejs3x/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/seungwongo/Documents/github/vuejs3x/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/seungwongo/Documents/github/vuejs3x/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/seungwongo/Documents/github/vuejs3x/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/seungwongo/Documents/github/vuejs3x/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrIH0gZnJvbSAidnVlIjsKCnZhciBfaG9pc3RlZF8xID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiaW1nIiwgewogIHNyYzogIi8vay5rYWthb2Nkbi5uZXQvMTQvZG4vYnRxQ24wV0VtSTMvbmlqcm9QZmJwQ2E0YXQ1RUlzanlmMC9vLmpwZyIsCiAgd2lkdGg6ICIyMjIiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBudWxsLCBbX2NyZWF0ZVZOb2RlKCJhIiwgewogICAgaWQ6ICJjdXN0b20tbG9naW4tYnRuIiwKICAgIG9uQ2xpY2s6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMua2FrYW9Mb2dpbigpOwogICAgfSkKICB9LCBbX2hvaXN0ZWRfMV0pXSk7Cn0="},{"version":3,"sources":["/Users/seungwongo/Documents/github/vuejs3x/src/views/Login.vue"],"names":[],"mappings":";;8BAGM,YAAA,CAGE,KAHF,EAGE;AAFA,EAAA,GAAG,EAAC,iEAEJ;AADA,EAAA,KAAK,EAAC;AACN,CAHF,E,IAAA,E;;AAAA,C;;;uBAFJ,YAAA,CAOQ,KAPR,EAOQ,IAPR,EAOQ,CANN,YAAA,CAKI,GALJ,EAKI;AALD,IAAA,EAAE,EAAC,kBAKF;AALsB,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,UAAA,EAAF;AAAA,KAAA;AAK3B,GALJ,E,CACE,U,CADF,CAMM,CAPR,C","sourcesContent":["<template>\n  <div >\n    <a id=\"custom-login-btn\" @click=\"kakaoLogin()\">\n      <img\n        src=\"//k.kakaocdn.net/14/dn/btqCn0WEmI3/nijroPfbpCa4at5EIsjyf0/o.jpg\"\n        width=\"222\"\n      />\n    </a>\n    </div>\n</template>\n<script>\n// import axios from 'axios'\n\nexport default {\n  components: {\n  },\n  data() {\n    return {\n      code:\"\",\n    };\n  },\n  mounted() {\n    // Kakao.init('c2875030d590c5acc4f04aa15597bab4');\n    // Kakao.isInitialized();\n  },\n  methods: {\n    kakaoLogin() {\n        window.Kakao.Auth.login({\n            scope : 'profile, account_email',\n            success: this.getKakaoAccount,\n        });\n    },\n    getKakaoAccount(){\n        window.Kakao.API.request({\n            url:'/v2/user/me',\n            success : res => {\n                const kakao_account = res.kakao_account;\n                const nickname = kakao_account.profile.nickname; //카카오 닉네임\n                const email = kakao_account.email //카카오 이메일\n\n                console.log('nickname', nickname);\n                console.log('email', email);\n                //로그인 처리 구현\n\n\n                console.log(kakao_account);\n                // this.login(kakao_account);\n                \n                // const userInfo = {\n                //     nickname : kakao_account.profile.nickname,\n                //     email : kakao_account.email,\n                //     password : '',\n                //     account_type : 2,\n                // }\n\n                  // axios.post(`http://localhost:8080/account/kakao`,{\n                  //     email : userInfo.email,\n                  //     nickname : userInfo.nickname\n                  // })\n                  // .then(res => {\n                  //   console.log(res);\n                  //   console.log(\"데이터베이스에 회원 정보가 있음!\");\n                  // })\n                  // .catch(err => {\n                  //     console.log(err);\n                  //   console.log(\"데이터베이스에 회원 정보가 없음!\");\n                  // })\n                // console.log(userInfo);\n                alert(\"로그인 성공!\");\n            },\n            fail : error => {\n                // this.$router.push(\"/errorPage\");\n                console.log(error);\n            }\n        })\n    },\n    async login(kakao_account) {\n      await this.$api(\"/api/login\", {\n        param:[\n          {email:kakao_account.email, nickname:kakao_account.profile.nickname, gender:kakao_account.gender},\n          {nickname:kakao_account.profile.nickname, gender:kakao_account.gender}\n          ]\n      });\n\n      this.$store.commit(\"user\",kakao_account);\n      \n      this.$router.push({ path: 'test'});\n    }\n  }\n}\n</script>"],"sourceRoot":""}]}